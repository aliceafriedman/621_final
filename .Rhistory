library(gridExtra)
library(psych)
library(corrplot)
library(onehot)
library(pheatmap)
library(RColorBrewer)
library(rolog)
library(tidyr)
library(ggplot2)
library(MASS)
library(class)
library(Matrix)
library(rpart)
library(knitr)
library(ISLR)
library(GGally)
library(ggmap)
library(ggplot2)
library(gargle)
library(ggthemes)
library(gargle)
library(dplyr)
library(randomForest)
library(caTools)
library(forecast)
library(quantmod)
library(data.table)
library(xts)
library(zoo)
library(base)
library(TTR)
library(Metrics)
library(caret)
#library(gridExtra)
#library(psych)
#library(corrplot)
#library(onehot)
#library(pheatmap)
#library(RColorBrewer)
#library(rolog)
library(tidyr)
library(ggplot2)
library(MASS)
#library(class)
#library(Matrix)
#library(rpart)
library(knitr)
#library(ISLR)
#library(GGally)
#library(ggmap)
#library(ggplot2)
#library(gargle)
#library(ggthemes)
#library(gargle)
library(dplyr)
#library(randomForest)
#library(caTools)
#library(forecast)
#library(quantmod)
#library(data.table)
#library(xts)
#library(zoo)
#library(base)
#library(TTR)
#library(Metrics)
library(caret)
#df_mat <- read.csv("https://raw.githubusercontent.com/IvanGrozny88/DATA621-Final-Project/main/student-mat.csv")
#df_por <- read.csv("https://raw.githubusercontent.com/IvanGrozny88/DATA621-Final-Project/main/student-por.csv")
df_mat <- read.csv("https://raw.githubusercontent.com/seung-m1nsong/602/main/Final/student-mat.csv")
df_por <- read.csv("https://raw.githubusercontent.com/seung-m1nsong/602/main/Final/student-por.csv")
df_student <- rbind(df_mat, df_por)
describe(df_student)
nrow(df_student)
ncol(df_student)
#mat <- as.data.frame(mat)
mat_new <- df_mat %>% gather(key = 'key', value = 'value')
mat_new %>% gather() %>% ggplot(aes(x= value)) + geom_histogram(stat = "count", fill = "skyblue") + facet_wrap(~key, scales = 'free', ncol=7)
#mat <- as.data.frame(mat)
por_new <- df_por %>% gather(key = 'key', value = 'value')
por_new %>% gather() %>% ggplot(aes(x= value)) + geom_histogram(stat = "count", fill = "orange") + facet_wrap(~key, scales = 'free', ncol=7)
#mat <- as.data.frame(mat)
df_long <- df_student #%>% gather(key = 'key', value = 'value')
df_long %>% gather() %>% ggplot(aes(x= value)) + geom_histogram(stat = "count", fill = "skyblue") + facet_wrap(~key, scales = 'free', ncol=7)
corrplot(cor(df_mat[,sapply(df_mat, is.numeric)], use = "complete.obs"), type="upper", diag = FALSE, col=brewer.pal(n=10, name="Paired"))
corrplot(cor(df_student[,sapply(df_student, is.numeric)], use = "complete.obs"), type="upper", diag = FALSE, col=brewer.pal(n=10, name="Paired"))
corrplot(cor(df_por[,sapply(df_por, is.numeric)], use = "complete.obs"), type="upper", diag = FALSE, col=brewer.pal(n=10, name="Paired"))
p1 <- df_student %>% na.omit() %>% ggplot(aes(factor(G3), traveltime)) + geom_boxplot()
p2 <- df_student %>% na.omit() %>% ggplot(aes(factor(G3), studytime)) + geom_boxplot()
p3 <- df_student %>% na.omit() %>% ggplot(aes(factor(G3), failures)) + geom_boxplot()
p4 <- df_student %>% na.omit() %>% ggplot(aes(factor(G3), famrel)) + geom_boxplot()
p5 <- df_student %>% na.omit() %>% ggplot(aes(factor(G3), freetime)) + geom_boxplot()
p6 <- df_student %>% na.omit() %>% ggplot(aes(factor(G3), goout)) + geom_boxplot()
p7 <- df_student %>% na.omit() %>% ggplot(aes(factor(G3), Dalc)) + geom_boxplot()
p8 <- df_student %>% na.omit() %>% ggplot(aes(factor(G3), Walc)) + geom_boxplot()
p9 <- df_student %>% na.omit() %>% ggplot(aes(factor(G3), health)) + geom_boxplot()
p10<- df_student %>% na.omit() %>% ggplot(aes(factor(G3), absences)) + geom_boxplot()
#p4 <- train_df %>% na.omit() %>% ggplot(aes(pH, FixedAcidity)) + geom_point(alpha=.1) + geom_smooth()
grid.arrange(p1, p2, p3, p4, p5, p6, p7,p8,p9,p10, ncol=2)
nrow(df_mat[is.na(df_mat),])
nrow(df_por[is.na(df_por),])
# Rename columns in df_student
colnames(df_student)[colnames(df_student) == "famsup"] <- "famEdsup"
colnames(df_student)[colnames(df_student) == "Walc"] <- "weekAlc"
colnames(df_student)[colnames(df_student) == "goout"] <- "friendtime"
# create a new column named 'G1G2avg' with the value 'mat' and 'por'
df_student <- df_student %>% mutate(G1G2avg = (G1 + G2)/2)
print(head(df_student))
# create a new column named 'G1G2G3avg' with the value 'mat' and 'por'
df_student<- df_student%>% mutate(G1G2G3avg = round((G1 + G2 + G3)/3, 1))
print(head(df_student))
# create a new column named 'class' with the value 'mat' and 'por'
df_student$class <- 'mat'
df_student$class <- 'por'
# Print total G1G2G3avg
total_avg <- mean(df_student$G1G2G3avg)
print(total_avg)
# Calculate average of G1G2avg for each combination of romantic status and sex
avg_romantic_0_female <- mean(df_student[df_student$romantic == 0 & df_student$sex == "F", "G1G2avg"])
avg_romantic_0_male <- mean(df_student[df_student$romantic == 0 & df_student$sex == "M", "G1G2avg"])
avg_romantic_1_female <- mean(df_student[df_student$romantic == 1 & df_student$sex == "F", "G1G2avg"])
avg_romantic_1_male <- mean(df_student[df_student$romantic == 1 & df_student$sex == "M", "G1G2avg"])
# Create a bar plot
ggplot(data = NULL, aes(x = factor(c("Female = 0", "Male = 0", "Female = 1", "Male = 1")), y = c(avg_romantic_0_female, avg_romantic_0_male, avg_romantic_1_female, avg_romantic_1_male), fill = c("#C44E52", "#C44E52", "#4C72B0", "#4C72B0"))) +
geom_bar(stat = "identity", width = 0.6) +
xlab("Sex and Romantic Status") + ylab("Average G1G2avg") +
ggtitle("Average G1G2avg by Sex and Romantic Status") +
guides(fill = FALSE)
# Calculate average of G1G2G3avg per studytime
study_avg <- aggregate(df_student$G1G2G3avg, by = list(df_student$studytime), FUN = mean)
# Create a bar graph
barplot(study_avg$x, names.arg = study_avg$Group.1, col = "orange", xlab = "Studytime",
ylab = "Average G1G2G3 Score", main = "Average G1G2G3 Score by Study")
?describe
?grid.arrange
?rmse
?rpart
library(gridExtra)
library(psych)
library(corrplot)
#library(onehot)
#library(pheatmap)
library(RColorBrewer)
#library(rolog)
library(tidyr)
library(ggplot2)
library(MASS)
#library(class)
#library(Matrix)
#library(rpart)
library(knitr)
#library(ISLR)
#library(GGally)
#library(ggmap)
#library(ggplot2)
#library(gargle)
#library(ggthemes)
#library(gargle)
library(dplyr)
library(randomForest)
#library(caTools)
#library(forecast)
#library(quantmod)
#library(data.table)
#library(xts)
#library(zoo)
#library(base)
#library(TTR)
library(Metrics)
library(caret)
plot(
G3~ traveltime + studytime + failures + schoolsup + famEdsup + paid + activities +	nursery +	higher + internet +	romantic + famrel +	freetime + friendtime +	Dalc +	weekAlc +	health +	absences, data = df_student
)
opar <- par(mfrow = c(1,1), xpd = NA)
plot(
G3~ traveltime + studytime + failures + schoolsup + famEdsup + paid + activities +	nursery +	higher + internet +	romantic + famrel +	freetime + friendtime +	Dalc +	weekAlc +	health +	absences, data = df_student
)
library(rpart)
data_tr <- rpart(G3~ traveltime + studytime + failures + schoolsup + famEdsup + paid + activities +	nursery +	higher + internet +	romantic + famrel +	freetime + friendtime +	Dalc +	weekAlc +	health +	absences, data = df_student)
data_tr
opar <- par(mfrow = c(1,1), xpd = NA)
plot(data_tr)
text(data_tr, use.n = TRUE)
par(opar)
?pairs.default
?panel.cor
library(gridExtra)
library(psych)
library(corrplot)
#library(onehot)
#library(pheatmap)
library(RColorBrewer)
#library(rolog)
library(tidyr)
library(ggplot2)
library(MASS)
#library(class)
#library(Matrix)
library(rpart)
library(knitr)
#library(ISLR)
#library(GGally)
#library(ggmap)
#library(ggplot2)
#library(gargle)
#library(ggthemes)
#library(gargle)
library(dplyr)
library(randomForest)
#library(caTools)
#library(forecast)
#library(quantmod)
#library(data.table)
#library(xts)
#library(zoo)
#library(base)
#library(TTR)
library(Metrics)
library(caret)
pairs(data.frame(y_obs=y_obs,
yhat_lm=yhat_step,
yhat_rf=yhat_rf),
lower.panel=function(x,y){ points(x,y); abline(0, 1, col='red')},
upper.panel = panel.cor)
?panel.cor
